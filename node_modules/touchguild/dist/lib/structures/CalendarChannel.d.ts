/** @module CalendarChannel */
import { Client } from "./Client";
import { CalendarEvent } from "./CalendarEvent";
import { GuildChannel } from "./GuildChannel";
import type { APICalendarEvent, APIGuildChannel, POSTCalendarEventBody } from "../Constants";
import TypedCollection from "../util/TypedCollection";
import { JSONCalendarChannel } from "../types/json";
import { CreateCalendarEventOptions, EditCalendarEventOptions } from "../types/calendarEvent";
/** Represents a calendar channel. */
export declare class CalendarChannel extends GuildChannel {
    /** Cached scheduled events. */
    scheduledEvents: TypedCollection<number, APICalendarEvent, CalendarEvent>;
    /**
     * @param data raw data
     * @param client client
     */
    constructor(data: APIGuildChannel, client: Client);
    /** Create an event in this channel.
     * @param options Event options.
     * @param createSeries (optional) Create a series. (event's repetition)
     */
    createEvent(options: CreateCalendarEventOptions, createSeries?: POSTCalendarEventBody["repeatInfo"]): Promise<CalendarEvent>;
    /** Edit an event from this channel.
     * @param eventID ID of a calendar event.
     * @param options Edit options.
     */
    editEvent(eventID: number, options: EditCalendarEventOptions): Promise<CalendarEvent>;
    /**
     * Edit an event series set in this channel.
     * @param channelID ID of the channel.
     * @param eventID ID of the event.
     * @param seriesID ID of the series.
     * @param options Edit repetition options.
     */
    editSeries(eventID: number, seriesID: string, options: POSTCalendarEventBody["repeatInfo"]): Promise<void>;
    /**
     * Delete an event series set in this channel.
     * @param eventID ID of the event.
     * @param seriesID ID of the series.
     */
    deleteSeries(eventID: number, seriesID: string): Promise<void>;
    /**
     * Delete an event from this channel.
     * @param eventID ID of the event to delete.
     */
    deleteEvent(eventID: number): Promise<void>;
    toJSON(): JSONCalendarChannel;
}
