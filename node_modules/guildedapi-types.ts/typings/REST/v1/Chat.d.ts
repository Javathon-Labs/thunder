import { APIAnnouncement, APIAnnouncementComment, APIChatMessage, APIChatMessageCategories, APIEmbedOptions, APIMentions } from "../../payloads/v1/Chat";
export interface POSTChannelMessageBody {
    isPrivate?: boolean;
    isSilent?: boolean;
    replyMessageIds?: Array<string>;
    content?: string;
    embeds?: Array<APIEmbedOptions>;
}
export interface POSTChannelMessageResponse {
    message: APIChatMessage;
}
export interface GETChannelMessagesQuery {
    before?: string;
    after?: string;
    limit?: number;
    includePrivate?: boolean;
}
export interface GETChannelMessagesResponse {
    messages: Array<APIChatMessage>;
}
export interface GETChannelMessageResponse {
    message: APIChatMessage;
}
export interface PUTChannelMessageBody {
    content?: string;
    embeds?: Array<APIChatMessage>;
}
export interface PUTChannelMessageResponse {
    message: APIChatMessage | {
        id?: string;
        type?: APIChatMessageCategories;
        serverId?: string;
        channelId: string;
        content?: string;
        embeds?: Array<APIEmbedOptions>;
        replyMessageIds?: Array<string>;
        isPrivate?: boolean;
        isSilent?: boolean;
        mentions?: APIMentions;
        createdAt?: string;
        createdBy?: string;
        createdByWebhookId?: string;
        updatedAt: string;
    };
}
export interface POSTChannelAnnouncementBody {
    title: string;
    content: string;
}
export interface POSTChannelAnnouncementResponse {
    announcement: APIAnnouncement;
}
export interface GETChannelAnnouncementsQuery {
    before?: string;
    limit?: number;
}
export interface GETChannelAnnouncementsResponse {
    announcements: Array<APIAnnouncement>;
}
export interface GETChannelAnnouncementResponse {
    announcement: APIAnnouncement;
}
export interface PATCHChannelAnnouncementBody {
    title?: string;
    content?: string;
}
export interface PATCHChannelAnnouncementResponse {
    announcement: APIAnnouncement;
}
export interface POSTChannelAnnouncementCommentBody {
    content: string;
}
export interface POSTChannelAnnouncementCommentResponse {
    announcementComment: APIAnnouncementComment;
}
export interface GETChannelAnnouncementCommentsResponse {
    announcementComments: Array<APIAnnouncementComment>;
}
export interface GETChannelAnnouncementCommentResponse {
    announcementComment: APIAnnouncementComment;
}
export interface PATCHChannelAnnouncementCommentBody {
    content: string;
}
export interface PATCHChannelAnnouncementCommentResponse {
    announcementComment: APIAnnouncementComment;
}
//# sourceMappingURL=Chat.d.ts.map