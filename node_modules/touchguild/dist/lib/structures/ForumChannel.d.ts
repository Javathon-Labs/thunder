/** @module ForumChannel */
import { Client } from "./Client";
import { ForumThread } from "./ForumThread";
import { GuildChannel } from "./GuildChannel";
import type { APIForumTopic, APIGuildChannel } from "../Constants";
import TypedCollection from "../util/TypedCollection";
import { JSONForumChannel } from "../types/json";
import { CreateForumThreadOptions, EditForumThreadOptions } from "../types/forumThread";
/** Represents a forum channel. */
export declare class ForumChannel extends GuildChannel {
    /** Cached threads. */
    threads: TypedCollection<number, APIForumTopic, ForumThread<ForumChannel>>;
    /**
     * @param data raw data
     * @param client client
     */
    constructor(data: APIGuildChannel, client: Client);
    /** Create a thread in this channel.
     * @param options Thread's options including title & content.
     */
    createThread(options: CreateForumThreadOptions): Promise<ForumThread<ForumChannel>>;
    /** Edit a thread from this channel.
     * @param threadID ID of a thread.
     * @param options Edit options.
     */
    editThread(threadID: number, options: EditForumThreadOptions): Promise<ForumThread<ForumChannel>>;
    /** Delete a thread from this channel.
     * @param threadID ID of a thread.
     */
    deleteThread(threadID: number): Promise<void>;
    /** Pin a thread.
     * @param threadID ID of a thread.
     */
    pinThread(threadID: number): Promise<void>;
    /** Unpin a thread.
     * @param threadID ID of a thread.
     */
    unpinThread(threadID: number): Promise<void>;
    /** Lock a thread.
     * @param threadID ID of a thread.
     */
    lockThread(threadID: number): Promise<void>;
    /** Unlock a thread.
     * @param threadID ID of a thread.
     */
    unlockThread(threadID: number): Promise<void>;
    toJSON(): JSONForumChannel;
}
