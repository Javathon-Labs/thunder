import { Permissions } from "../../gateway";
import { APIGuild, APIGuildGroup, APIGuildRole, APIGuildSubscription, APIGuildCategory } from "../../payloads/v1/Guilds";
import { APIGuildMemberBan } from "../../payloads/v1/Members";
export interface GETGuildResponse {
    server: APIGuild;
}
export interface POSTGuildBanBody {
    reason?: string;
}
export interface POSTGuildBanResponse {
    serverMemberBan: APIGuildMemberBan;
}
export interface GETGuildBanResponse {
    serverMemberBan: APIGuildMemberBan;
}
export interface GETGuildBansResponse {
    serverMemberBans: Array<APIGuildMemberBan>;
}
export interface POSTGuildGroupBody {
    name: string;
    description?: string;
    emoteId?: number;
    isPublic?: boolean;
}
export interface POSTGuildGroupResponse {
    group: APIGuildGroup;
}
export interface GETGuildGroupsResponse {
    groups: Array<APIGuildGroup>;
}
export interface GETGuildGroupResponse {
    group: APIGuildGroup;
}
export interface PATCHGuildGroupBody {
    name?: string;
    description?: string;
    emoteId?: number;
    isPublic?: boolean;
}
export interface PATCHGuildGroupResponse {
    group: APIGuildGroup;
}
export interface GETGuildRoleResponse {
    role: APIGuildRole;
}
export interface GETGuildRolesResponse {
    roles: Array<APIGuildRole>;
}
export interface POSTGuildRoleBody {
    name: string;
    isDisplayedSeparately?: boolean;
    isSelfAssignable?: boolean;
    isMentionable?: boolean;
    permissions: Array<Permissions>;
    colors: Array<number>;
}
export interface POSTGuildRoleResponse {
    role: APIGuildRole;
}
export interface PATCHGuildRoleBody {
    name?: string;
    isDisplayedSeparately?: boolean;
    isSelfAssignable?: boolean;
    isMentionable?: boolean;
    permissions: Array<Permissions>;
    priority?: number;
    colors: Array<number>;
}
export interface PATCHGuildRoleResponse {
    role: APIGuildRole;
}
export interface PATCHGuildRoleUpdateBody {
    permissions: Partial<Record<Permissions, boolean>>;
}
export interface PATCHGuildRoleUpdateResponse {
    role: APIGuildRole;
}
export interface GETGuildSubscriptionResponse {
    serverSubscriptionTier: APIGuildSubscription;
}
export interface GETGuildSubscriptionsResponse {
    serverSubscriptionTiers: Array<APIGuildSubscription>;
}
export interface POSTCreateCategoryBody {
    name: string;
    groupId?: string;
}
export interface POSTCreateCategoryResponse {
    category: APIGuildCategory;
}
export interface GETReadCategoryResponse {
    category: APIGuildCategory;
}
export interface PATCHUpdateCategoryBody {
    name: string;
}
export interface PATCHUpdateCategoryResponse {
    category: APIGuildCategory;
}
export interface DELETEDeleteCategoryResponse {
    category: APIGuildCategory;
}
//# sourceMappingURL=Guilds.d.ts.map