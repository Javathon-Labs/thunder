/** @module AnnouncementReactionInfo */
import { ReactionInfo } from "./ReactionInfo";
import { Client } from "./Client";
import { AnnouncementReactionTypes } from "../types/types";
import { GatewayEvent_AnnouncementCommentReactionCreated, GatewayEvent_AnnouncementCommentReactionDeleted, GatewayEvent_AnnouncementReactionCreated, GatewayEvent_AnnouncementReactionDeleted } from "../Constants";
/** Information about a Announcement's reaction. */
export declare class AnnouncementReactionInfo extends ReactionInfo {
    /** ID of the announcement where the reaction is added to. */
    announcementID: string;
    /** ID of the announcement comment, if reaction was added/removed from a comment. */
    commentID: number | null;
    /** The type of the parent entity. */
    type: string;
    /**
     * @param data raw data.
     * @param client client.
     */
    constructor(data: GatewayEvent_AnnouncementReactionCreated | GatewayEvent_AnnouncementReactionDeleted | GatewayEvent_AnnouncementCommentReactionCreated | GatewayEvent_AnnouncementCommentReactionDeleted, client: Client);
    /** The announcement where the reaction has been added.
     * If the event is cached, it'll return a Announcement component,
     * otherwise it'll return basic information about this announcement.
     */
    get announcement(): AnnouncementReactionTypes["announcement"];
}
