/** @module DocReactionInfo */
import { ReactionInfo } from "./ReactionInfo";
import { Client } from "./Client";
import { DocReactionTypes } from "../types/types";
import { GatewayEvent_DocReactionCreated as GW_DocRCRE, GatewayEvent_DocReactionDeleted as GW_DocRDEL, GatewayEvent_DocCommentReactionCreated as GW_DocCRCRE, GatewayEvent_DocCommentReactionDeleted as GW_DocCRDEL } from "../Constants";
/** Information about a Doc's reaction. */
export declare class DocReactionInfo extends ReactionInfo {
    /** ID of the doc where the reaction was added/removed. */
    docID: number;
    /** The type of the parent entity. */
    type: string;
    /**
     * @param data raw data.
     * @param client client.
     */
    constructor(data: GW_DocRCRE | GW_DocRDEL | GW_DocCRCRE | GW_DocCRDEL, client: Client);
    /** The doc where the reaction has been added.
     * If the doc is cached, it'll return a Doc component,
     * otherwise it'll return basic information about this doc.
     */
    get doc(): DocReactionTypes["doc"];
}
