"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocHandler = void 0;
/** @module DocHandler */
const GatewayEventHandler_1 = require("./GatewayEventHandler");
const Doc_1 = require("../../structures/Doc");
const DocReactionInfo_1 = require("../../structures/DocReactionInfo");
const DocComment_1 = require("../../structures/DocComment");
/** Internal component, emitting doc events. */
class DocHandler extends GatewayEventHandler_1.GatewayEventHandler {
    async docCreate(data) {
        if (this.client.params.waitForCaching)
            await this.addGuildChannel(data.serverId, data.doc.channelId);
        else
            void this.addGuildChannel(data.serverId, data.doc.channelId);
        const channel = this.client.getChannel(data.serverId, data.doc.channelId);
        const DocComponent = channel?.docs.update(data.doc) ?? new Doc_1.Doc(data.doc, this.client);
        this.client.emit("docCreate", DocComponent);
    }
    async docUpdate(data) {
        if (this.client.params.waitForCaching)
            await this.addGuildChannel(data.serverId, data.doc.channelId);
        else
            void this.addGuildChannel(data.serverId, data.doc.channelId);
        const channel = this.client.getChannel(data.serverId, data.doc.channelId);
        const CachedDoc = channel?.docs.get(data.doc.id)?.toJSON() ?? null;
        const DocComponent = channel?.docs.update(data.doc) ?? new Doc_1.Doc(data.doc, this.client);
        this.client.emit("docUpdate", DocComponent, CachedDoc);
    }
    async docDelete(data) {
        if (this.client.params.waitForCaching)
            await this.addGuildChannel(data.serverId, data.doc.channelId);
        else
            void this.addGuildChannel(data.serverId, data.doc.channelId);
        const channel = this.client.getChannel(data.serverId, data.doc.channelId);
        const DocComponent = channel?.docs.update(data.doc) ?? new Doc_1.Doc(data.doc, this.client);
        channel?.docs.delete(data.doc.id);
        this.client.emit("docDelete", DocComponent);
    }
    async docReactionAdd(data) {
        if (this.client.params.waitForCaching)
            await this.addGuildChannel(data.serverId, data.reaction.channelId, data.reaction.docId);
        else
            void this.addGuildChannel(data.serverId, data.reaction.channelId, data.reaction.docId);
        const reactionInfo = new DocReactionInfo_1.DocReactionInfo(data, this.client);
        this.client.emit("reactionAdd", reactionInfo);
    }
    async docReactionRemove(data) {
        if (this.client.params.waitForCaching)
            await this.addGuildChannel(data.serverId, data.reaction.channelId, data.reaction.docId);
        else
            void this.addGuildChannel(data.serverId, data.reaction.channelId, data.reaction.docId);
        const reactionInfo = new DocReactionInfo_1.DocReactionInfo(data, this.client);
        this.client.emit("reactionRemove", reactionInfo);
    }
    async docCommentReactionAdd(data) {
        if (this.client.params.waitForCaching)
            await this.addGuildChannel(data.serverId, data.reaction.channelId, data.reaction.docId);
        else
            void this.addGuildChannel(data.serverId, data.reaction.channelId, data.reaction.docId);
        const reactionInfo = new DocReactionInfo_1.DocReactionInfo(data, this.client);
        this.client.emit("reactionAdd", reactionInfo);
    }
    async docCommentReactionRemove(data) {
        if (this.client.params.waitForCaching)
            await this.addGuildChannel(data.serverId, data.reaction.channelId, data.reaction.docId);
        else
            void this.addGuildChannel(data.serverId, data.reaction.channelId, data.reaction.docId);
        const reactionInfo = new DocReactionInfo_1.DocReactionInfo(data, this.client);
        this.client.emit("reactionRemove", reactionInfo);
    }
    async docCommentCreate(data) {
        if (this.client.params.waitForCaching)
            await this.addGuildChannel(data.serverId, data.docComment.channelId, data.docComment.docId);
        else
            void this.addGuildChannel(data.serverId, data.docComment.channelId, data.docComment.docId);
        const channel = this.client.getChannel(data.serverId, data.docComment.channelId);
        const comment = channel?.docs.get(data.docComment.docId)?.comments.update(data.docComment) ?? new DocComment_1.DocComment(data.docComment, this.client, { guildID: data.serverId });
        this.client.emit("docCommentCreate", comment);
    }
    async docCommentUpdate(data) {
        if (this.client.params.waitForCaching)
            void this.addGuildChannel(data.serverId, data.docComment.channelId, data.docComment.docId);
        else
            void this.addGuildChannel(data.serverId, data.docComment.channelId, data.docComment.docId);
        const channel = this.client.getChannel(data.serverId, data.docComment.channelId);
        const cachedComment = channel?.docs.get(data.docComment.docId)?.comments.get(data.docComment.id)?.toJSON() ?? null;
        const comment = channel?.docs.get(data.docComment.docId)?.comments.update(data.docComment) ?? new DocComment_1.DocComment(data.docComment, this.client, { guildID: data.serverId });
        this.client.emit("docCommentUpdate", comment, cachedComment);
    }
    async docCommentDelete(data) {
        if (this.client.params.waitForCaching)
            void this.addGuildChannel(data.serverId, data.docComment.channelId, data.docComment.docId);
        else
            void this.addGuildChannel(data.serverId, data.docComment.channelId, data.docComment.docId);
        const channel = this.client.getChannel(data.serverId, data.docComment.channelId);
        const comment = channel?.docs.get(data.docComment.docId)?.comments.update(data.docComment) ?? new DocComment_1.DocComment(data.docComment, this.client, { guildID: data.serverId });
        this.client.emit("docCommentDelete", comment);
    }
    async addGuildChannel(guildID, channelID, docID) {
        /** OLD */
        // if (this.client.getChannel(guildID, channelID) !== undefined) return;
        // const channel = await this.client.rest.channels.getChannel(channelID);
        // const guild = this.client.guilds.get(guildID);
        // guild?.channels?.add(channel);
        const guild = this.client.guilds.get(guildID);
        if (this.client.getChannel(guildID, channelID) === undefined) {
            const channel = await this.client.rest.channels.getChannel(channelID).catch(err => this.client.emit("warn", `Cannot register channel to cache due to: (${String(err)})`));
            if (typeof channel !== "boolean")
                guild?.channels.add(channel);
        }
        const conditions = this.client.getChannel(guildID, channelID) !== undefined && this.client.getChannel(guildID, channelID)?.docs.get(docID) === undefined;
        if (guildID && channelID && docID && conditions) {
            const restDoc = await this.client.rest.channels.getDoc(channelID, docID).catch(err => this.client.emit("warn", `Cannot register doc to cache due to: (${String(err)})`));
            const channel = guild?.channels.get(channelID);
            if (typeof restDoc !== "boolean")
                channel?.docs.add(restDoc);
        }
    }
}
exports.DocHandler = DocHandler;
//# sourceMappingURL=data:application/json;base64,