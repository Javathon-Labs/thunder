"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CalendarChannel = void 0;
const tslib_1 = require("tslib");
const CalendarEvent_1 = require("./CalendarEvent");
const GuildChannel_1 = require("./GuildChannel");
const TypedCollection_1 = tslib_1.__importDefault(require("../util/TypedCollection"));
/** Represents a calendar channel. */
class CalendarChannel extends GuildChannel_1.GuildChannel {
    /**
     * @param data raw data
     * @param client client
     */
    constructor(data, client) {
        super(data, client);
        this.scheduledEvents = new TypedCollection_1.default(CalendarEvent_1.CalendarEvent, client, client.params.collectionLimits?.scheduledEvents);
        this.update(data);
    }
    /** Create an event in this channel.
     * @param options Event options.
     * @param createSeries (optional) Create a series. (event's repetition)
     */
    async createEvent(options, createSeries) {
        return this.client.rest.channels.createCalendarEvent(this.id, options, createSeries);
    }
    /** Edit an event from this channel.
     * @param eventID ID of a calendar event.
     * @param options Edit options.
     */
    async editEvent(eventID, options) {
        return this.client.rest.channels.editCalendarEvent(this.id, eventID, options);
    }
    /**
     * Edit an event series set in this channel.
     * @param channelID ID of the channel.
     * @param eventID ID of the event.
     * @param seriesID ID of the series.
     * @param options Edit repetition options.
     */
    async editSeries(eventID, seriesID, options) {
        return this.client.rest.channels.editCalendarEventSeries(this.id, eventID, seriesID, options);
    }
    /**
     * Delete an event series set in this channel.
     * @param eventID ID of the event.
     * @param seriesID ID of the series.
     */
    async deleteSeries(eventID, seriesID) {
        return this.client.rest.channels.deleteCalendarEventSeries(this.id, eventID, seriesID);
    }
    /**
     * Delete an event from this channel.
     * @param eventID ID of the event to delete.
     */
    async deleteEvent(eventID) {
        return this.client.rest.channels.deleteCalendarEvent(this.id, eventID);
    }
    toJSON() {
        return {
            ...super.toJSON(),
            scheduledEvents: this.scheduledEvents.map(event => event.toJSON())
        };
    }
}
exports.CalendarChannel = CalendarChannel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FsZW5kYXJDaGFubmVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL3N0cnVjdHVyZXMvQ2FsZW5kYXJDaGFubmVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFHQSxtREFBZ0Q7QUFDaEQsaURBQThDO0FBRTlDLHNGQUFzRDtBQUl0RCxxQ0FBcUM7QUFDckMsTUFBYSxlQUFnQixTQUFRLDJCQUFZO0lBRzdDOzs7T0FHRztJQUNILFlBQVksSUFBcUIsRUFBRSxNQUFjO1FBQzdDLEtBQUssQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDcEIsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLHlCQUFlLENBQUMsNkJBQWEsRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsRUFBRSxlQUFlLENBQUMsQ0FBQztRQUNuSCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxLQUFLLENBQUMsV0FBVyxDQUFDLE9BQW1DLEVBQUUsWUFBa0Q7UUFDckcsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDekYsQ0FBQztJQUVEOzs7T0FHRztJQUNILEtBQUssQ0FBQyxTQUFTLENBQUMsT0FBZSxFQUFFLE9BQWlDO1FBQzlELE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ2xGLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSCxLQUFLLENBQUMsVUFBVSxDQUFDLE9BQWUsRUFBRSxRQUFnQixFQUFFLE9BQTRDO1FBQzVGLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNsRyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILEtBQUssQ0FBQyxZQUFZLENBQUMsT0FBZSxFQUFFLFFBQWdCO1FBQ2hELE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzNGLENBQUM7SUFFRDs7O09BR0c7SUFDSCxLQUFLLENBQUMsV0FBVyxDQUFDLE9BQWU7UUFDN0IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRVEsTUFBTTtRQUNYLE9BQU87WUFDSCxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUU7WUFDakIsZUFBZSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ3JFLENBQUM7SUFDTixDQUFDO0NBQ0o7QUEvREQsMENBK0RDIn0=