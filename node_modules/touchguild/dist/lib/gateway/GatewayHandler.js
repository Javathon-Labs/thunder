"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GatewayHandler = void 0;
/** @module GatewayHandler */
/* eslint-disable @typescript-eslint/no-unsafe-member-access */
const ChannelHandler_1 = require("./events/ChannelHandler");
const ForumThreadHandler_1 = require("./events/ForumThreadHandler");
const MessageHandler_1 = require("./events/MessageHandler");
const GuildHandler_1 = require("./events/GuildHandler");
const WebhookHandler_1 = require("./events/WebhookHandler");
const DocHandler_1 = require("./events/DocHandler");
const CalendarHandler_1 = require("./events/CalendarHandler");
const ListItemHandler_1 = require("./events/ListItemHandler");
const AnnouncementHandler_1 = require("./events/AnnouncementHandler");
const UserHandler_1 = require("./events/UserHandler");
/** Gateway handler filters every ws events. */
class GatewayHandler {
    constructor(client) {
        this.client = client;
        this.messageHandler = new MessageHandler_1.MessageHandler(this.client);
        this.channelHandler = new ChannelHandler_1.ChannelHandler(this.client);
        this.forumThreadHandler = new ForumThreadHandler_1.ForumThreadHandler(this.client);
        this.guildHandler = new GuildHandler_1.GuildHandler(this.client);
        this.webhookHandler = new WebhookHandler_1.WebhookHandler(this.client);
        this.docHandler = new DocHandler_1.DocHandler(this.client);
        this.calendarHandler = new CalendarHandler_1.CalendarHandler(this.client);
        this.listItemHandler = new ListItemHandler_1.ListItemHandler(this.client);
        this.announcementHandler = new AnnouncementHandler_1.AnnouncementHandler(this.client);
        this.userHandler = new UserHandler_1.UserHandler(this.client);
        this.toHandlerMap = {
            // Messages
            ChatMessageCreated: data => this.messageHandler.messageCreate(data),
            ChatMessageUpdated: data => this.messageHandler.messageUpdate(data),
            ChatMessageDeleted: data => this.messageHandler.messageDelete(data),
            ChannelMessageReactionCreated: data => this.messageHandler.messageReactionAdd(data),
            ChannelMessageReactionDeleted: data => this.messageHandler.messageReactionRemove(data),
            ChannelMessageReactionManyDeleted: data => this.messageHandler.messageReactionBulkRemove(data),
            ChannelMessagePinned: data => this.messageHandler.messagePin(data),
            ChannelMessageUnpinned: data => this.messageHandler.messageUnpin(data),
            // Channels
            ServerChannelCreated: data => this.channelHandler.channelCreate(data),
            ServerChannelUpdated: data => this.channelHandler.channelUpdate(data),
            ServerChannelDeleted: data => this.channelHandler.channelDelete(data),
            ChannelRolePermissionCreated: data => this.channelHandler.channelRolePermissionCreated(data),
            ChannelRolePermissionUpdated: data => this.channelHandler.channelRolePermissionUpdated(data),
            ChannelRolePermissionDeleted: data => this.channelHandler.channelRolePermissionDeleted(data),
            ChannelUserPermissionCreated: data => this.channelHandler.channelUserPermissionCreated(data),
            ChannelUserPermissionUpdated: data => this.channelHandler.channelUserPermissionUpdated(data),
            ChannelUserPermissionDeleted: data => this.channelHandler.channelUserPermissionDeleted(data),
            ChannelArchived: data => this.channelHandler.channelArchive(data),
            ChannelRestored: data => this.channelHandler.channelRestore(data),
            ChannelCategoryUserPermissionCreated: data => this.channelHandler.channelCategoryUserPermissionCreated(data),
            ChannelCategoryUserPermissionUpdated: data => this.channelHandler.channelCategoryUserPermissionCreated(data),
            ChannelCategoryUserPermissionDeleted: data => this.channelHandler.channelCategoryUserPermissionCreated(data),
            ChannelCategoryRolePermissionCreated: data => this.channelHandler.channelCategoryRolePermissionCreated(data),
            ChannelCategoryRolePermissionUpdated: data => this.channelHandler.channelCategoryRolePermissionUpdated(data),
            ChannelCategoryRolePermissionDeleted: data => this.channelHandler.channelCategoryRolePermissionDeleted(data),
            // Forum Topics
            ForumTopicCreated: data => this.forumThreadHandler.forumThreadCreate(data),
            ForumTopicUpdated: data => this.forumThreadHandler.forumThreadUpdate(data),
            ForumTopicDeleted: data => this.forumThreadHandler.forumThreadDelete(data),
            ForumTopicPinned: data => this.forumThreadHandler.forumThreadPin(data),
            ForumTopicUnpinned: data => this.forumThreadHandler.forumThreadUnpin(data),
            ForumTopicLocked: data => this.forumThreadHandler.forumThreadLock(data),
            ForumTopicUnlocked: data => this.forumThreadHandler.forumThreadUnlock(data),
            ForumTopicReactionCreated: data => this.forumThreadHandler.forumThreadReactionAdd(data),
            ForumTopicReactionDeleted: data => this.forumThreadHandler.forumThreadReactionRemove(data),
            ForumTopicCommentCreated: data => this.forumThreadHandler.forumThreadCommentCreate(data),
            ForumTopicCommentUpdated: data => this.forumThreadHandler.forumThreadCommentUpdate(data),
            ForumTopicCommentDeleted: data => this.forumThreadHandler.forumThreadCommentDelete(data),
            ForumTopicCommentReactionCreated: data => this.forumThreadHandler.forumThreadCommentReactionAdd(data),
            ForumTopicCommentReactionDeleted: data => this.forumThreadHandler.forumThreadCommentReactionRemove(data),
            // Guilds
            ServerMemberBanned: data => this.guildHandler.guildBanAdd(data),
            ServerMemberUnbanned: data => this.guildHandler.guildBanRemove(data),
            ServerMemberJoined: data => this.guildHandler.guildMemberAdd(data),
            ServerMemberRemoved: data => this.guildHandler.guildMemberRemove(data),
            ServerMemberUpdated: data => this.guildHandler.guildMemberUpdate(data),
            ServerRolesUpdated: data => this.guildHandler.guildMemberRoleUpdate(data),
            ServerMemberSocialLinkCreated: data => this.guildHandler.guildMemberSocialLinkCreate(data),
            ServerMemberSocialLinkUpdated: data => this.guildHandler.guildMemberSocialLinkUpdate(data),
            ServerMemberSocialLinkDeleted: data => this.guildHandler.guildMemberSocialLinkDelete(data),
            BotServerMembershipCreated: data => this.guildHandler.guildCreate(data),
            BotServerMembershipDeleted: data => this.guildHandler.guildDelete(data),
            // Guild groups
            GroupCreated: data => this.guildHandler.guildGroupCreate(data),
            GroupUpdated: data => this.guildHandler.guildGroupUpdate(data),
            GroupDeleted: data => this.guildHandler.guildGroupDelete(data),
            // Guild roles
            RoleCreated: data => this.guildHandler.guildRoleCreate(data),
            RoleUpdated: data => this.guildHandler.guildRoleUpdate(data),
            RoleDeleted: data => this.guildHandler.guildRoleDelete(data),
            // Webhooks
            ServerWebhookCreated: data => this.webhookHandler.webhooksCreate(data),
            ServerWebhookUpdated: data => this.webhookHandler.webhooksUpdate(data),
            // Docs
            DocCreated: data => this.docHandler.docCreate(data),
            DocUpdated: data => this.docHandler.docUpdate(data),
            DocDeleted: data => this.docHandler.docDelete(data),
            DocReactionCreated: data => this.docHandler.docReactionAdd(data),
            DocReactionDeleted: data => this.docHandler.docReactionRemove(data),
            DocCommentCreated: data => this.docHandler.docCommentCreate(data),
            DocCommentUpdated: data => this.docHandler.docCommentUpdate(data),
            DocCommentDeleted: data => this.docHandler.docCommentDelete(data),
            DocCommentReactionCreated: data => this.docHandler.docCommentReactionAdd(data),
            DocCommentReactionDeleted: data => this.docHandler.docCommentReactionRemove(data),
            // Calendars
            CalendarEventCreated: data => this.calendarHandler.calendarEventCreate(data),
            CalendarEventUpdated: data => this.calendarHandler.calendarEventUpdate(data),
            CalendarEventDeleted: data => this.calendarHandler.calendarEventDelete(data),
            CalendarEventReactionCreated: data => this.calendarHandler.calendarEventReactionAdd(data),
            CalendarEventReactionDeleted: data => this.calendarHandler.calendarEventReactionRemove(data),
            CalendarEventCommentCreated: data => this.calendarHandler.calendarCommentCreate(data),
            CalendarEventCommentUpdated: data => this.calendarHandler.calendarCommentUpdate(data),
            CalendarEventCommentDeleted: data => this.calendarHandler.calendarCommentDelete(data),
            CalendarEventCommentReactionCreated: data => this.calendarHandler.calendarCommentReactionAdd(data),
            CalendarEventCommentReactionDeleted: data => this.calendarHandler.calendarCommentReactionRemove(data),
            CalendarEventRsvpUpdated: data => this.calendarHandler.calendarRsvpUpdate(data),
            CalendarEventRsvpManyUpdated: () => this.calendarHandler.calendarRsvpManyUpdated(),
            CalendarEventRsvpDeleted: data => this.calendarHandler.calendarRsvpDelete(data),
            // Lists
            ListItemCreated: data => this.listItemHandler.listItemCreate(data),
            ListItemUpdated: data => this.listItemHandler.listItemUpdate(data),
            ListItemDeleted: data => this.listItemHandler.listItemDelete(data),
            ListItemCompleted: data => this.listItemHandler.listItemComplete(data),
            ListItemUncompleted: data => this.listItemHandler.listItemUncomplete(data),
            // Announcements (messages & comments)
            AnnouncementCreated: data => this.announcementHandler.announcementCreate(data),
            AnnouncementUpdated: data => this.announcementHandler.announcementUpdate(data),
            AnnouncementDeleted: data => this.announcementHandler.announcementDelete(data),
            AnnouncementCommentCreated: data => this.announcementHandler.announcementCommentCreate(data),
            AnnouncementCommentUpdated: data => this.announcementHandler.announcementCommentUpdate(data),
            AnnouncementCommentDeleted: data => this.announcementHandler.announcementCommentDelete(data),
            AnnouncementReactionCreated: data => this.announcementHandler.announcementReactionAdd(data),
            AnnouncementReactionDeleted: data => this.announcementHandler.announcementReactionRemove(data),
            AnnouncementCommentReactionCreated: data => this.announcementHandler.announcementCommentReactionAdd(data),
            AnnouncementCommentReactionDeleted: data => this.announcementHandler.announcementCommentReactionRemove(data),
            // Users
            UserStatusCreated: data => this.userHandler.userStatusCreate(data),
            UserStatusDeleted: data => this.userHandler.userStatusDelete(data),
            // Category
            CategoryCreated: data => this.guildHandler.guildCategoryCreate(data),
            CategoryUpdated: data => this.guildHandler.guildCategoryUpdate(data),
            CategoryDeleted: data => this.guildHandler.guildCategoryDelete(data)
        };
    }
    async handleMessage(eventType, eventData) {
        if (eventType) {
            const serverId = "serverId";
            if (eventData[serverId] && this.client.guilds.has(eventData[serverId]) === false) {
                // eslint-disable-next-line @typescript-eslint/no-floating-promises
                this.client.guilds.add(await this.client.rest.guilds.getGuild(eventData[serverId]));
            }
            if (eventData["message"] && eventData["message"]["type"] === "system")
                return; // system sending fake messages, haha :)
            this.toHandlerMap[eventType]?.(eventData);
        }
    }
}
exports.GatewayHandler = GatewayHandler;
//# sourceMappingURL=data:application/json;base64,