/** @module CalendarHandler */
import { GatewayEventHandler } from "./GatewayEventHandler";
import { GatewayEvent_CalendarEventCommentCreated, GatewayEvent_CalendarEventCommentDeleted, GatewayEvent_CalendarEventCommentReactionCreated, GatewayEvent_CalendarEventCommentReactionDeleted, GatewayEvent_CalendarEventCommentUpdated, GatewayEvent_CalendarEventCreated, GatewayEvent_CalendarEventDeleted, GatewayEvent_CalendarEventReactionCreated, GatewayEvent_CalendarEventReactionDeleted, GatewayEvent_CalendarEventRsvpDeleted, GatewayEvent_CalendarEventRsvpManyUpdated, GatewayEvent_CalendarEventRsvpUpdated, GatewayEvent_CalendarEventUpdated } from "../../Constants";
/** Internal component, emitting calendar events. */
export declare class CalendarHandler extends GatewayEventHandler {
    calendarEventCreate(data: GatewayEvent_CalendarEventCreated): Promise<void>;
    calendarEventUpdate(data: GatewayEvent_CalendarEventUpdated): Promise<void>;
    calendarEventDelete(data: GatewayEvent_CalendarEventDeleted): Promise<void>;
    calendarEventReactionAdd(data: GatewayEvent_CalendarEventReactionCreated): Promise<void>;
    calendarEventReactionRemove(data: GatewayEvent_CalendarEventReactionDeleted): Promise<void>;
    calendarCommentCreate(data: GatewayEvent_CalendarEventCommentCreated): Promise<void>;
    calendarCommentUpdate(data: GatewayEvent_CalendarEventCommentUpdated): Promise<void>;
    calendarCommentDelete(data: GatewayEvent_CalendarEventCommentDeleted): Promise<void>;
    calendarCommentReactionAdd(data: GatewayEvent_CalendarEventCommentReactionCreated): Promise<void>;
    calendarCommentReactionRemove(data: GatewayEvent_CalendarEventCommentReactionDeleted): Promise<void>;
    calendarRsvpUpdate(data: GatewayEvent_CalendarEventRsvpUpdated): Promise<void>;
    calendarRsvpBulkUpdate(data: GatewayEvent_CalendarEventRsvpManyUpdated): Promise<void>;
    calendarRsvpDelete(data: GatewayEvent_CalendarEventRsvpDeleted): Promise<void>;
    calendarRsvpManyUpdated(): Promise<void>;
    private addGuildChannel;
}
