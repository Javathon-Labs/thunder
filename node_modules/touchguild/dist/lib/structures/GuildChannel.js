"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GuildChannel = void 0;
const Base_1 = require("./Base");
/** Represents a guild channel. */
class GuildChannel extends Base_1.Base {
    // /** Cached messages. */
    // messages: TypedCollection<string, APIChatMessage, Message<AnyTextableChannel>>;
    // /** Cached threads. */
    // threads: TypedCollection<number, APIForumTopic, ForumThread<AnyTextableChannel>>;
    // /** Cached docs. */
    // docs: TypedCollection<number, APIDoc, Doc>;
    // /** Cached scheduled events. */
    // scheduledEvents: TypedCollection<number, APICalendarEvent, CalendarEvent>;
    /**
     * @param data raw data
     * @param client client
     */
    constructor(data, client) {
        super(data.id, client);
        this.type = data.type;
        this.name = data.name;
        this.description = data.topic ?? null;
        this.createdAt = new Date(data.createdAt);
        this.creatorID = data.createdBy;
        this.editedTimestamp = data.updatedAt ? new Date(data.updatedAt) : null;
        this.guildID = data.serverId;
        this.parentID = data.parentId ?? null;
        this.categoryID = data.categoryId ?? null;
        this.groupID = data.groupId;
        this.archivedBy = data.archivedBy ?? null;
        this.archivedAt = data.archivedAt ? new Date(data.archivedAt) : null;
        this.visibility = data.visibility ?? "public";
        this.isPublic = this.visibility === "public" ? true : false;
        // this.messages = new TypedCollection(Message, client, client.params.collectionLimits?.messages);
        // this.threads = new TypedCollection(ForumThread, client, client.params.collectionLimits?.threads);
        // this.docs = new TypedCollection(Doc, client, client.params.collectionLimits?.docs);
        // this.scheduledEvents = new TypedCollection(CalendarEvent, client, client.params.collectionLimits?.scheduledEvents);
        this.update(data);
    }
    toJSON() {
        return {
            ...super.toJSON(),
            type: this.type,
            name: this.name,
            description: this.description,
            createdAt: this.createdAt,
            creatorID: this.creatorID,
            editedTimestamp: this.editedTimestamp,
            guildID: this.guildID,
            parentID: this.parentID,
            categoryID: this.categoryID,
            groupID: this.groupID,
            isPublic: this.isPublic,
            archivedBy: this.archivedBy,
            archivedAt: this.archivedAt,
            visibility: this.visibility
        };
    }
    update(data) {
        if (data.archivedAt !== undefined) {
            this.archivedAt = new Date(data.archivedAt);
        }
        if (data.archivedBy !== undefined) {
            this.archivedBy = data.archivedBy;
        }
        if (data.categoryId !== undefined) {
            this.categoryID = data.categoryId;
        }
        if (data.createdAt !== undefined) {
            this.createdAt = new Date(data.createdAt);
        }
        if (data.createdBy !== undefined) {
            this.creatorID = data.createdBy;
        }
        if (data.groupId !== undefined) {
            this.groupID = data.groupId;
        }
        if (data.id !== undefined) {
            this.id = data.id;
        }
        if (data.isPublic !== undefined) {
            this.isPublic = data.isPublic;
        }
        if (data.name !== undefined) {
            this.name = data.name;
        }
        if (data.parentId !== undefined) {
            this.parentID = data.parentId;
        }
        if (data.serverId !== undefined) {
            this.guildID = data.serverId;
        }
        if (data.topic !== undefined) {
            this.description = data.topic;
        }
        if (data.type !== undefined) {
            this.type = data.type;
        }
        if (data.updatedAt !== undefined) {
            this.editedTimestamp = new Date(data.updatedAt);
        }
        if (data.visibility !== undefined) {
            this.visibility = data.visibility;
        }
    }
    /** Edit the channel. */
    async edit(options) {
        return this.client.rest.guilds.editChannel(this.id, options);
    }
    /** Delete the channel. */
    async delete() {
        return this.client.rest.guilds.deleteChannel(this.id);
    }
    /** Archive the channel */
    async archive() {
        return this.client.rest.channels.archiveChannel(this.id);
    }
    /** Unarchive the channel */
    async restore() {
        return this.client.rest.channels.restoreChannel(this.id);
    }
}
exports.GuildChannel = GuildChannel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3VpbGRDaGFubmVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL3N0cnVjdHVyZXMvR3VpbGRDaGFubmVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdBLGlDQUE4QjtBQU05QixrQ0FBa0M7QUFDbEMsTUFBYSxZQUFhLFNBQVEsV0FBWTtJQTRCMUMsMEJBQTBCO0lBQzFCLGtGQUFrRjtJQUNsRix5QkFBeUI7SUFDekIsb0ZBQW9GO0lBQ3BGLHNCQUFzQjtJQUN0Qiw4Q0FBOEM7SUFDOUMsa0NBQWtDO0lBQ2xDLDZFQUE2RTtJQUM3RTs7O09BR0c7SUFDSCxZQUFZLElBQXFCLEVBQUUsTUFBYztRQUM3QyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN2QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDdEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUM7UUFDdEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDeEUsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQzdCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7UUFDdEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxJ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