/** @module Announcement */
import { Client } from "./Client";
import { Base } from "./Base";
import { AnnouncementComment } from "./AnnouncementComment";
import { APIAnnouncement, APIAnnouncementComment, APIMentions, PATCHChannelAnnouncementBody, POSTChannelAnnouncementBody } from "../Constants";
import { JSONAnnouncement } from "../types/json";
import TypedCollection from "../util/TypedCollection";
/** Represents a channel announcement. */
export declare class Announcement extends Base<string> {
    /** ID of the guild. */
    guildID: string;
    /** ID of the channel the announcement is in */
    channelID: string;
    /** The ISO 8601 timestamp that the announcement was created at */
    createdAt: Date;
    /** The ID of the member who created this announcement */
    memberID: string;
    /** The announcement's content */
    content: string;
    /** Mentions. */
    mentions: APIMentions | null;
    /** The announcement's title. */
    title: string;
    /** Cached announcement's comments */
    comments: TypedCollection<number, APIAnnouncementComment, AnnouncementComment>;
    /**
     * @param data raw data.
     * @param client client.
     */
    constructor(data: APIAnnouncement, client: Client);
    toJSON(): JSONAnnouncement;
    protected update(data: APIAnnouncement): void;
    /**
     * Edit this announcement.
     * @param options Edit options
     */
    edit(options: PATCHChannelAnnouncementBody): Promise<Announcement>;
    /**
     * Delete this announcement.
     */
    delete(): Promise<void>;
    /**
     * Create an announcement in the same Announcement channel as this one.
     * @param options Create options.
     */
    createAnnouncement(options: POSTChannelAnnouncementBody): Promise<Announcement>;
    /**
     * Add a reaction to this announcement.
     * @param reactionID ID of the emote to add
     */
    createReaction(emoteID: number): Promise<void>;
    /**
     * Remove a reaction from this announcement.
     * @param reactionID ID of the emote to remove
     */
    deleteReaction(emoteID: number): Promise<void>;
}
