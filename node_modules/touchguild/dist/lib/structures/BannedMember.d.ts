/** @module BannedMember */
import { Client } from "./Client";
import { User } from "./User";
import { Guild } from "./Guild";
import { Base } from "./Base";
import { Member } from "./Member";
import { APIGuildMemberBan } from "../Constants";
import { JSONBannedMember } from "../types/json";
/** BannedMember represents a banned guild member. */
export declare class BannedMember extends Base<string> {
    /** Server ID. */
    guildID: string;
    /** Information about the banned member (object) */
    ban: {
        /** Reason of the ban */
        reason?: string;
        /** When the member has been banned. */
        createdAt: Date | null;
        /** ID of the member who banned this member. */
        bannedBy: string;
    };
    /** Banned user. */
    user: User;
    /** Banned member, if cached. */
    member: Member | null;
    /**
     * @param guildID ID of the guild.
     * @param data raw data.
     * @param client client.
     */
    constructor(guildID: string, data: APIGuildMemberBan, client: Client);
    toJSON(): JSONBannedMember;
    protected update(data: APIGuildMemberBan): void;
    /** Getter used to get the message's guild
     *
     * Note: this can return a promise, make sure to await it before.
     */
    get guild(): Guild | Promise<Guild>;
}
