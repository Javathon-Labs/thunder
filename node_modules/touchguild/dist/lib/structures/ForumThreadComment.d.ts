/** @module ForumThreadComment */
import { Client } from "./Client";
import { Base } from "./Base";
import { Member } from "./Member";
import { APIForumTopicComment, APIMentions } from "../Constants";
import { CreateForumCommentOptions, EditForumCommentOptions, ConstructorForumThreadOptions } from "../types/forumThreadComment";
import { JSONForumThreadComment } from "../types/json";
/** Represents a comment coming from a ForumThread. */
export declare class ForumThreadComment extends Base<number> {
    /** The content of the forum thread comment */
    content: string;
    /** The ISO 8601 timestamp that the forum thread comment was created at */
    createdAt: Date;
    /** The ISO 8601 timestamp that the forum thread comment was updated at, if relevant */
    updatedAt: Date | null;
    /** The ID of the forum thread */
    threadID: number;
    /** The ID of the user who sent this comment. */
    memberID: string;
    /** ID of the forum thread's server, if provided. */
    guildID: string | null;
    /** ID of the forum channel containing this thread. */
    channelID: string;
    /** Mentions in this thread comment. */
    mentions: APIMentions | null;
    constructor(data: APIForumTopicComment, client: Client, options?: ConstructorForumThreadOptions);
    toJSON(): JSONForumThreadComment;
    protected update(data: APIForumTopicComment): void;
    /** Retrieve the member who sent this comment, if cached.
     * If there is no cached member, this will make a rest request which returns a Promise.
     * If the request fails, it'll return you undefined as a value.
     */
    get member(): Member | Promise<Member> | undefined;
    /** Add a comment to the same forum thread as this comment.
     * @param options New comment's options.
     */
    createForumComment(options: CreateForumCommentOptions): Promise<ForumThreadComment>;
    /** Add a reaction to the comment.
     * @param reaction The ID of the reaction to add.
     */
    createReaction(reaction: number): Promise<void>;
    /** Remove a reaction from the comment.
     * @param reaction The ID of the reaction to remove.
     */
    deleteReaction(reaction: number): Promise<void>;
    /** Edit this forum thread's comment.
     * @param options Edit options.
     */
    edit(options?: EditForumCommentOptions): Promise<ForumThreadComment>;
    /** Delete this forum thread comment. */
    delete(): Promise<void>;
}
